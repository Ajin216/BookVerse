<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create Category Offer</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-50">
    <%- include("../../views/partials/admin/header") %>

    <div class="min-h-screen p-6">
        <div class="container mx-auto">
            <div class="flex justify-between items-center mb-6 px-4">
                <h1 class="text-3xl font-extrabold text-gray-900">Create Category Offer</h1>
                <a 
                    href="/admin/offers" 
                    class="text-violet-600 font-medium hover:underline flex items-center"
                >
                    View All Offers
                </a>
            </div>

            <div class="bg-white rounded-xl shadow-xl p-8">
                <form id="offerForm" class="space-y-8">
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
                        <div>
                            <label for="offerName" class="block text-sm font-semibold text-gray-700 mb-2">
                                Offer Name
                            </label>
                            <input 
                                type="text" 
                                id="offerName" 
                                name="offerName" 
                                required
                                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-violet-500 focus:border-violet-500 shadow-sm"
                                placeholder="Enter offer name"
                            >
                        </div>

                        <div>
                            <label for="discountPercentage" class="block text-sm font-semibold text-gray-700 mb-2">
                                Discount Percentage
                            </label>
                            <input 
                                type="number" 
                                id="discountPercentage" 
                                name="discountPercentage" 
                                min="0" 
                                max="100" 
                                required
                                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-violet-500 focus:border-violet-500 shadow-sm"
                                placeholder="Enter discount percentage"
                            >
                        </div>

                        <div>
                            <label for="category" class="block text-sm font-semibold text-gray-700 mb-2">
                                Select Categories
                            </label>
                            <select 
                                id="category" 
                                name="category"
                                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-violet-500 focus:border-violet-500 shadow-sm"
                            >
                                <option value="">Choose a category</option>
                                <% cat.forEach(function(category) { %>
                                    <option value="<%= category._id %>" data-name="<%= category.name %>">
                                        <%= category.name %>
                                    </option>
                                <% }); %>
                            </select>
                        </div>

                        <!-- Selected Categories Display Box -->
                        <div>
                            <label class="block text-sm font-semibold text-gray-700 mb-2">
                                Selected Categories
                            </label>
                            <div id="selectedCategoriesBox" class="min-h-[120px] w-full p-4 border border-gray-300 rounded-lg bg-gray-50 overflow-y-auto space-y-2">
                                <p class="text-gray-500 italic text-sm">No categories selected</p>
                            </div>
                        </div>

                        <div>
                            <label for="expiryDate" class="block text-sm font-semibold text-gray-700 mb-2">
                                Expiry Date
                            </label>
                            <input 
                                type="date" 
                                id="expiryDate" 
                                name="expiryDate" 
                                required
                                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-violet-500 focus:border-violet-500 shadow-sm"
                            >
                        </div>
                    </div>

                    <div class="flex justify-end space-x-4 pt-6 border-t border-gray-200">
                        <a 
                            href="/admin/categoryOffer"
                            class="px-6 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 font-medium focus:outline-none focus:ring-2 focus:ring-gray-500"
                        >
                            Cancel
                        </a>
                        <button 
                            type="submit"
                            class="px-6 py-3 bg-violet-600 text-white rounded-lg font-medium hover:bg-violet-700 focus:outline-none focus:ring-2 focus:ring-violet-500 shadow-sm"
                        >
                            Create Category Offer
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <%- include("../../views/partials/admin/footer") %>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        // Store selected categories
        const selectedCategories = new Map();
        const categorySelect = document.getElementById('category');
        const selectedCategoriesBox = document.getElementById('selectedCategoriesBox');

        // Handle category selection
        categorySelect.addEventListener('change', function() {
            const selectedOption = this.options[this.selectedIndex];
            if (this.value) {
                const categoryId = this.value;
                const categoryName = selectedOption.text;
                
                if (!selectedCategories.has(categoryId)) {
                    selectedCategories.set(categoryId, categoryName);
                    updateSelectedCategoriesDisplay();
                }
                
                // Reset select to default option
                this.selectedIndex = 0;
            }
        });

        // Remove category from selection
        function removeCategory(categoryId) {
            selectedCategories.delete(categoryId);
            updateSelectedCategoriesDisplay();
        }

        // Update the display box
        function updateSelectedCategoriesDisplay() {
            selectedCategoriesBox.innerHTML = '';
            
            if (selectedCategories.size === 0) {
                selectedCategoriesBox.innerHTML = '<p class="text-gray-500 italic text-sm">No categories selected</p>';
                return;
            }

            selectedCategories.forEach((name, id) => {
                const categoryElement = document.createElement('div');
                categoryElement.className = 'flex justify-between items-center p-2 bg-white border border-gray-200 rounded-lg';
                categoryElement.innerHTML = `
                    <span class="text-gray-700">${name}</span>
                    <button type="button" onclick="removeCategory('${id}')" 
                            class="text-red-500 hover:text-red-700 focus:outline-none">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                        </svg>
                    </button>
                `;
                selectedCategoriesBox.appendChild(categoryElement);
            });
        }

        // Form submission
        document.getElementById('offerForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const offerName = document.getElementById('offerName').value;
            const discountPercentage = document.getElementById('discountPercentage').value;
            const expiryDate = document.getElementById('expiryDate').value;
            const categoryIds = Array.from(selectedCategories.keys());

            // Validation
            if (!offerName.trim()) {
                Swal.fire({
                    icon: 'error',
                    title: 'Validation Error',
                    text: 'Please enter offer name'
                });
                return;
            }

            if (/^[\d\s]/.test(offerName)) {
                Swal.fire({
                    icon: 'error',
                    title: 'Validation Error',
                    text: 'Offer name cannot start with spaces or numbers'
                });
                return;
            }

            if (!discountPercentage || discountPercentage < 1 || discountPercentage > 50) {
                Swal.fire({
                    icon: 'error',
                    title: 'Validation Error',
                    text: 'Discount percentage must be between 1 and 50'
                });
                return;
            }

            if (categoryIds.length === 0) {
                Swal.fire({
                    icon: 'error',
                    title: 'Validation Error',
                    text: 'Please select at least one category'
                });
                return;
            }

            if (!expiryDate || new Date(expiryDate) <= new Date()) {
                Swal.fire({
                    icon: 'error',
                    title: 'Validation Error',
                    text: 'Please select a future expiry date'
                });
                return;
            }

            // Show loading state
            Swal.fire({
                title: 'Creating offer...',
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });

            const formData = { 
                offerName, 
                discountPercentage, 
                categoryIds,
                expiryDate 
            };

            fetch('/admin/addCategoryOffer', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: 'Category offer created successfully',
                        showConfirmButton: false,
                        timer: 1500
                    }).then(() => {
                        window.location.href = '/admin/categoryOffer';
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message || 'Error creating offer'
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Failed to create offer. Please try again.'
                });
            });
        });

        // Initialize the display
        updateSelectedCategoriesDisplay();
    </script>
</body>
</html>